
Instructions
The objective of this lab is to build a Morse code receiver/decoder. It must accept Morse code (digits 0-9) as input via user button presses, and output the result to a dot matrix display.

What to submit
The required materials for this lab are the same as for Lab 1. Be sure to cover:
how your debouncing algorithm works and why you chose it (i.e. How is it better than alternatives for this application?)
how you recognize and decode user inputs, including dealing with variations in timing and erroneous inputs


Shift Registers
Shift registers
When you read the datasheet for the LED dot matrix, and look at your arduino, you will notice that the arduino does not have enough pins to run the display.  One way to solve this problem is using a serial in, parallel out (SIPO) shift register.  The basic idea is that you can use one arduino pin to send a series of signals to the register (serial in), which will store those signals and then output all at once (parallel out) on a set of output pins.

Read more about shift registers on the Wikipedia article.

You will be given one shift register for this assignment.  The part numbers vary, so you should look at the part number on the chip and then search google for the datasheet to find out how to operate it.



LED dot matrix
You will be displaying the numbers on the LED dot matrix we handed out in class.  You can view this just as it sounds: it is a bunch of LEDs wired in a grid.  The circuit diagram for the matrix is included in the datasheet.  Remember that a resistor is required in the LED circuit.

The datasheet lists two part numbers.  The part number that has been handed out is the LTP-757G.
